# BTS problem에 도전하다.

- 브라우저가 선생님으로 느껴지도록. 
- 브라우저 상에서 선생님이 언제든지 등장할 수 있도록 (실시간 진단 > 알림 > 대응). 
- BTS switching이 일어나도록. 

- 인터페이스 + 활동기록 + 피드백 최적화
- 선생님의 피드백 환경을 최적화 (즉시 참조 가능하고 현장감 있고 개인 맞춤 피드백을 돕는 UX)
- 고도의 피드백 설계 (단순 UI가 아니라 피드백에 의해 경험되어지는 UX)

# 활동구조화
- 상황별 맞춤형 활동들을 구성하는 방법 찾기
- 개념, 내신, 심화, 수능으로 구조화.

# 하이튜터링 시스템 (이태상 T)
- 지면평가 모델
- 노이즈캔슬링 헤드폰 사용
- 음성 및 화이트보드에 대한 루브릭 기반 평가
- 우수한 평가결과(혹은 학생)을 토대로 루브릭 자동 업데이트
- 개념설명, 심화개념 설명, 대표유형 설명, 심화 대표유형 설명, 실전문제 설명, 심층추론 상호작용 등 목적에 맞는 맞춤형 하이튜터링 시스템 개발. 전체 구조를 최적화하고 인지과학적 토대로 제작 후 구조적 안정성 하에 사용하면서 고도화.


# 당면과제
- mathking interface 교체
- 활동기록 및 의미저장
- 하이튜터링 개별 기능 개발
- 하이튜터링 하나로 합치기
- 서버상에 소스코드 올려서 코딩하기
- json 파일 생성

# 인터페이스
http://34.27.109.92/local/hightutor/hightutor.html 
